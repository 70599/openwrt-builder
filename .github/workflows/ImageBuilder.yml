name: Build ImmortalWrt Rockchip ARMv8

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.org/init_build_environment.sh)'
        sudo pip install pyelftools

    - name: Get latest stable release version from GitHub tags
      id: get_version
      run: |
        VERSION=$(curl -s "https://api.github.com/repos/immortalwrt/immortalwrt/tags" | jq -r '.[].name' | grep -E '^v?[0-9]+\.[0-9]+\.[0-9]+$' | sort -Vr | head -n 1 | sed 's/^v//')
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Download and extract ImageBuilder
      run: |
        URL="https://downloads.immortalwrt.org/releases/$VERSION/targets/rockchip/armv8/immortalwrt-imagebuilder-$VERSION-rockchip-armv8.Linux-x86_64.tar.zst"
        wget "$URL"
        tar -I zstd -xf immortalwrt-imagebuilder-$VERSION-rockchip-armv8.Linux-x86_64.tar.zst
        mv immortalwrt-imagebuilder-$VERSION-rockchip-armv8.Linux-x86_64 imagebuilder

    - name: Add uci-defaults for IP and shell
      run: |
        mkdir -p imagebuilder/files/etc/uci-defaults
        cat <<EOF > imagebuilder/files/etc/uci-defaults/99-custom-settings
        #!/bin/sh
        uci set network.lan.ipaddr='10.10.1.1'
        uci commit network
        sed -i 's|/bin/ash|/usr/bin/fish|g' /etc/passwd
        EOF
        chmod +x imagebuilder/files/etc/uci-defaults/99-custom-settings

    - name: Restore build cache
      uses: actions/cache@v4
      with:
        path: imagebuilder/tmp
        key: ${{ runner.os }}-openwrt-cache-${{ hashFiles('imagebuilder/.config') }}
        restore-keys: |
          ${{ runner.os }}-openwrt-cache-

    - name: Start SSH session via tmate
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true

    - name: Save .config
      run: |
        cp imagebuilder/.config saved-config/.config
      if: success()

    - name: Commit and push .config
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        mkdir -p saved-config
        cp imagebuilder/.config saved-config/.config
        git add saved-config/.config
        git commit -m "Save .config from CI menuconfig" || echo "No changes"
        git push
      if: success()

    - name: Build firmware
      run: |
        cd imagebuilder
        make image \
          PROFILE=rk3399 \
          PACKAGES="fish" \
          BIN_DIR=../output \
          CONFIG_OVERRIDES=../saved-config/.config

    - name: Upload firmware artifacts
      uses: actions/upload-artifact@v4
      with:
        name: immortalwrt-rockchip-armv8-firmware
        path: output

    - name: Send complete notification
      if: success()
      run: |
        TITLE="<b>‚úÖ [rockchip/armv8] Âõ∫‰ª∂ÁºñËØëÂÆåÊàê</b>"
        MESSAGE="üîó <a href='${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'>‰∏ãËΩΩÂú∞ÂùÄ</a>"
        curl \
          --data parse_mode=HTML \
          --data disable_web_page_preview=true \
          --data chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
          --data text="$TITLE%0A$MESSAGE" \
          --request POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage
